# Service definition for Consul cluster with a minimum of 3 nodes.
# Nodes will use Triton CNS for the service (passed in via the CONSUL
# env var) to find each other and bootstrap the cluster.
consul:
    image: autopilotpattern/consul:latest
    labels:
      - triton.cns.services=consul
    restart: always
    mem_limit: 128m
    ports:
        - "8500:8500"
    dns:
       - 127.0.0.1
    command: >
      /usr/local/bin/containerpilot
      /bin/consul agent -server
        -bootstrap-expect 1
        -config-dir=/etc/consul
        -ui-dir /ui


prometheus:
    build: ./prometheus
    mem_limit: 128m
    restart: always
    labels:
      - triton.cns.services=prometheus
    environment:
      - CONSUL=consul
    links:
    - consul:consul
    ports:
      - "9090:9090"


# ELK stack designed for container-native deployment
# on Joyent's Triton platform.

# ---------------------------------------------------
# The Kibana application queries the ES cluster

kibana:
    image: autopilotpattern/kibana:latest
    mem_limit: 128m
    restart: always
    labels:
      - triton.cns.services=kibana
    ports:
      - "5601:5601" # default Kibana port
    environment:
      - CONSUL=consul
      - CONFIG_PATH=/usr/share/kibana/config/kibana.yml
      - NODE_ENV=production
      - CONTAINERPILOT=file:///etc/containerpilot.json
    links:
    - consul:consul
    command: >
      /usr/local/bin/containerpilot
      /usr/share/kibana/node/bin/node
      /usr/share/kibana/src/cli

# ---------------------------------------------------
# The logstash container is the target of Docker log drivers

logstash:
    mem_limit: 256m
    build: .
    environment:
      - CONSUL=consul
      - CONTAINERPILOT=file:///etc/containerpilot.json
    links:
    - consul:consul
    expose:
    - "514"       # syslog tcp port
    - "514/udp"   # syslog udp port
    - "12201/udp" # gelf udp port
    command: >
      /usr/local/bin/containerpilot
      /opt/logstash/bin/logstash -f /etc/logstash/conf.d/logstash.conf

# ---------------------------------------------------
# This common service definition is the default for nodes that both store
# data and act as potential masternodes. It also serves as a template for
# master-only and data-only ES nodes.

elasticsearch:
    image: autopilotpattern/elasticsearch:latest
    mem_limit: 1g
    restart: always
    labels:
      - triton.cns.services=elasticsearch-master
    links:
    - consul:consul
    environment:
      - CONSUL=consul
      - ES_SERVICE_NAME=elasticsearch-master
      - CLUSTER_NAME=elasticsearch
      - ES_HEAP_SIZE=512m # set to 50% of mem_limit, but no more than 31g
      - ES_NODE_MASTER=true # default
      - ES_NODE_DATA=true   # default
      - CONTAINERPILOT=file:///etc/containerpilot.json

      # set the number of threads we want based on the number of CPU shares
      # that we'll get for this size container on Triton
      - ES_JAVA_OPTS=-XX:-UseGCTaskAffinity -XX:-BindGCTaskThreadsToCPUs -XX:ParallelGCThreads=1 -XX:ParallelCMSThreads=1

    command: >
      /usr/local/bin/containerpilot
      /usr/share/elasticsearch/bin/elasticsearch
      --default.path.conf=/etc/elasticsearch
